{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.actions\";\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/maxfurman/Desktop/MyFolder/e-commerce-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","then","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACIH,EAAAA,aAAa,CAACG,GAAd,GACKC,IADL,CACUF,QAAQ,IAAI;AACd,UAAMG,cAAc,GAAGZ,+BAA+B,CAACS,QAAD,CAAtD;AACAI,IAAAA,QAAQ,CAACZ,sBAAsB,CAACW,cAAD,CAAvB,CAAR;AACH,GAJL,EAKKE,KALL,CAKWC,KAAK,IAAIF,QAAQ,CAACX,sBAAsB,CAACa,KAAK,CAACC,OAAP,CAAvB,CAL5B;AAMP;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,SAAS,CACXK,eAAe,CAACe,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { \n    fetchCollectionSuccess,\n    fetchCollectionFailure\n} from \"./shop.actions\";\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('i am fired');\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n        collectionRef.get()\n            .then(snapshot => {\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n                dispatch(fetchCollectionSuccess(collectionsMap));\n            })\n            .catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    ); \n}"]},"metadata":{},"sourceType":"module"}