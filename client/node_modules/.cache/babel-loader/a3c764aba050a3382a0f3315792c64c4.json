{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/maxfurman/Desktop/MyFolder/e-commerce-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionSuccess","catch","error","fetchCollectionFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACID,EAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,sBAAsB,CAACF,cAAD,CAAvB,CAAR;AACH,GAJL,EAKKG,KALL,CAKWC,KAAK,IAAIH,QAAQ,CAACI,sBAAsB,CAACD,KAAK,CAACE,OAAP,CAAvB,CAL5B;AAMP;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,SAAS,CACXG,eAAe,CAACiB,uBADL,EAEXhB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('i am fired');\n    const collectionRef = firestore.collection('collections');\n        collectionRef.get()\n            .then(snapshot => {\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n                dispatch(fetchCollectionSuccess(collectionsMap));\n            })\n            .catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    ); \n}"]},"metadata":{},"sourceType":"module"}