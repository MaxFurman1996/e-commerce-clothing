{"ast":null,"code":"var _jsxFileName = \"/Users/maxfurman/Desktop/MyFolder/e-commerce-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionsOverViewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const fetchCollectionStartAsync = this.props.fetchCollectionStartAsync;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverViewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/maxfurman/Desktop/MyFolder/e-commerce-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionStartAsync","selectIsCollectionsLoaded","CollectionsOverViewContainer","CollectionPage","WithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;;AAGA,MAAMG,QAAN,SAAuBV,SAAvB,CAAiC;AAG7BW,EAAAA,iBAAiB,GAAG;AAAA,UACRP,yBADQ,GACsB,KAAKQ,KAD3B,CACRR,yBADQ;AAEhBA,IAAAA,yBAAyB;AAC5B;;AAEDS,EAAAA,MAAM,GAAE;AAAA,wBACkC,KAAKD,KADvC;AAAA,UACIE,KADJ,eACIA,KADJ;AAAA,UACWC,kBADX,eACWA,kBADX;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEV,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAA+DH,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhB4B;;AAmBjC,MAAMK,eAAe,GAAGd,wBAAwB,CAAC;AAC7CY,EAAAA,kBAAkB,EAAEV;AADyB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,yBAAyB,EAAE,MAAMe,QAAQ,CAACf,yBAAyB,EAA1B;AADL,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverViewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends Component {\n\n\n    componentDidMount() {\n        const { fetchCollectionStartAsync } = this.props;\n        fetchCollectionStartAsync();\n    }\n\n    render(){\n        const { match, isCollectionLoaded } = this.props;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionsOverViewContainer} />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props} />} />\n            </div>  \n        );\n    }\n} \n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}